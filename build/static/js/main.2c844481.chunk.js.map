{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","delete","newObject","put","PersonForm","props","persons","setPersons","setBanner","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","e","preventDefault","newPerson","name","number","map","i","includes","window","confirm","find","personService","newRecord","setTimeout","message","colour","catch","color","concat","value","onChange","target","type","Filter","filter","setFilter","Persons","toLowerCase","key","onClick","person","Notification","banner","notificationStyle","border","borderColor","borderRadius","backgroundColor","padding","style","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MACMA,EAAU,eAkBD,EAhBI,WACjB,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAezC,EAZG,SAACC,GACjB,OAAOL,IAAMM,KAAKP,EAASM,GAAcH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAWxD,EARM,SAACG,GACpB,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAAML,MAAK,SAACC,GAAD,OAAcA,EAASC,SAOvD,EAJO,SAACG,EAAIE,GACzB,OAAOT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAME,GAAWP,MAAK,SAACC,GAAD,OAAcA,EAASC,SCqE/DO,EAlFI,SAACC,GAAW,IACrBC,EAAmCD,EAAnCC,QAASC,EAA0BF,EAA1BE,WAAYC,EAAcH,EAAdG,UADD,EAGEC,mBAAS,IAHX,mBAGrBC,EAHqB,KAGZC,EAHY,OAIMF,mBAAS,IAJf,mBAIrBG,EAJqB,KAIVC,EAJU,KAiE5B,OACE,oCACE,0BAAMC,SArDW,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAY,CAChBC,KAAMR,EACNS,OAAQP,GAGV,GAAIN,EAAQc,KAAI,SAACC,GAAD,OAAOA,EAAEH,QAAMI,SAASZ,IACtC,GACEa,OAAOC,QAAP,UACKd,EADL,2EAGA,CACA,IAAMV,EAAKM,EAAQmB,MAAK,SAACJ,GAAD,OAAOA,EAAEH,OAASR,KAASV,GACnD0B,EACiB1B,EAAIiB,GAClBtB,MAAK,SAACgC,GACLpB,EAAWD,EAAQc,KAAI,SAACC,GAAD,OAAQA,EAAErB,KAAOA,EAAK2B,EAAYN,MACzDO,YAAW,WACTpB,EAAU,CAAEqB,QAAS,KAAMC,OAAQ,UAClC,KACHtB,EAAU,CACRqB,QAAQ,kBAAD,OAAoBZ,EAAUC,KAA9B,qBACPY,OAAQ,aAGXC,OAAM,WACLH,YAAW,WACTpB,EAAU,CACRqB,QAAQ,kBAAD,OAAoBZ,EAAUC,KAA9B,0CACPY,OAAQ,UAET,KACHtB,EAAU,CAAEqB,QAAS,KAAMG,MAAO,iBAIxCN,EAAwBT,GAAWtB,MAAK,SAACC,GACvCgC,YAAW,WACTpB,EAAU,CAAEqB,QAAS,KAAMC,OAAQ,UAClC,KACHtB,EAAU,CAAEqB,QAAQ,SAAD,OAAWjC,EAASsB,MAAQY,OAAQ,UACvDvB,EAAWD,EAAQ2B,OAAOrC,OAI9Be,EAAW,IACXE,EAAa,MAMT,sCACQ,2BAAOqB,MAAOxB,EAASyB,SA/DZ,SAACpB,GACxBJ,EAAWI,EAAEqB,OAAOF,WAgEhB,wCACU,2BAAOA,MAAOtB,EAAWuB,SA9Dd,SAACpB,GAC1BF,EAAaE,EAAEqB,OAAOF,WA+DlB,6BACE,4BAAQG,KAAK,UAAb,WC9DKC,EAdA,SAACjC,GAAW,IACjBkC,EAAsBlC,EAAtBkC,OAAQC,EAAcnC,EAAdmC,UAMhB,OACE,kDACoB,2BAAON,MAAOK,EAAQJ,SANjB,SAACpB,GAC1ByB,EAAUzB,EAAEqB,OAAOF,UAKwD,MCiBhEO,EAzBC,SAAC,GAAgD,IAA9CnC,EAA6C,EAA7CA,QAASiC,EAAoC,EAApCA,OAAQhC,EAA4B,EAA5BA,WAA4B,EAAhBC,UAS9C,OACE,6BACGF,EAAQc,KAAI,SAACC,GAAD,OACXA,EAAEH,KAAKwB,cAAcpB,SAASiB,GAC5B,uBAAGI,IAAKtB,EAAEH,MACPG,EAAEH,KADL,IACYG,EAAEF,OACZ,4BAAQyB,QAAS,kBAdLC,EAcwBxB,OAbxCE,OAAOC,QAAP,iBAAyBqB,EAAO3B,KAAhC,OACFQ,EACgBmB,EAAO7C,IACpBL,KAAKY,EAAWD,EAAQiC,QAAO,SAAClB,GAAD,OAAOA,EAAErB,KAAO6C,EAAO7C,SAJxC,IAAC6C,IAcZ,WAGF,QCHKC,EAhBM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,EAAoB,CACxBC,OAAQ,YACRC,YAAaH,EAAOjB,OACpBqB,aAAc,EACdC,gBAAiB,OACjBC,QAAS,IAGX,OAAuB,OAAnBN,EAAOlB,QACF,KAGF,yBAAKyB,MAAON,GAAoBD,EAAOlB,UCkBjC0B,EAzBH,WAAO,IAAD,EACc9C,mBAAS,IADvB,mBACTH,EADS,KACAC,EADA,OAEYE,mBAAS,IAFrB,mBAET8B,EAFS,KAEDC,EAFC,OAIY/B,mBAAS,CAAEoB,QAAS,KAAMC,OAAQ,QAJ9C,mBAITiB,EAJS,KAIDvC,EAJC,KAYhB,OAFAgD,qBAJa,WACX9B,IAA2B/B,MAAK,SAACW,GAAD,OAAaC,EAAWD,QAG1C,IAGd,6BACE,yCACA,kBAAC,EAAD,CAAcyC,OAAQA,IACtB,kBAAC,EAAD,CAAQR,OAAQA,EAAQC,UAAWA,IACnC,yCACA,kBAAC,EAAD,CAAYlC,QAASA,EAASC,WAAYA,EAAYC,UAAWA,IACjE,uCACA,kBAAC,EAAD,CAASF,QAASA,EAASC,WAAYA,EAAYgC,OAAQA,EAAQ/B,UAAWA,MCxBpFiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2c844481.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getPersons = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst addPerson = (personObject) => {\n  return axios.post(baseUrl, personObject).then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nconst replaceNumber = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then((response) => response.data);\n};\n\nexport default { getPersons, addPerson, deletePerson, replaceNumber };\n","import React, { useState } from 'react';\nimport personService from '../services/persons';\n\nconst PersonForm = (props) => {\n  const { persons, setPersons, setBanner } = props;\n\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const addNewPerson = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (persons.map((i) => i.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`,\n        )\n      ) {\n        const id = persons.find((i) => i.name === newName).id;\n        personService\n          .replaceNumber(id, newPerson)\n          .then((newRecord) => {\n            setPersons(persons.map((i) => (i.id === id ? newRecord : i)));\n            setTimeout(() => {\n              setBanner({ message: null, colour: 'red' });\n            }, 3000);\n            setBanner({\n              message: `The number for ${newPerson.name} has been updated`,\n              colour: 'green',\n            });\n          })\n          .catch(() => {\n            setTimeout(() => {\n              setBanner({\n                message: `Information of ${newPerson.name} has already been removed from server.`,\n                colour: 'red',\n              });\n            }, 3000);\n            setBanner({ message: null, color: 'red' });\n          });\n      }\n    } else {\n      personService.addPerson(newPerson).then((response) => {\n        setTimeout(() => {\n          setBanner({ message: null, colour: 'red' });\n        }, 3000);\n        setBanner({ message: `Added ${response.name}`, colour: 'green' });\n        setPersons(persons.concat(response));\n      });\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={addNewPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Filter = (props) => {\n  const { filter, setFilter } = props;\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilterChange} />{' '}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport personService from '../services/persons';\n\nconst Persons = ({ persons, filter, setPersons, setBanner }) => {\n  const deleteRecord = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(person.id)\n        .then(setPersons(persons.filter((i) => i.id !== person.id)));\n    }\n  };\n\n  return (\n    <div>\n      {persons.map((i) =>\n        i.name.toLowerCase().includes(filter) ? (\n          <p key={i.name}>\n            {i.name} {i.number}\n            <button onClick={() => deleteRecord(i)}>delete</button>\n          </p>\n        ) : (\n          ''\n        ),\n      )}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ banner }) => {\n  const notificationStyle = {\n    border: '5px solid',\n    borderColor: banner.colour,\n    borderRadius: 5,\n    backgroundColor: 'grey',\n    padding: 10,\n  };\n\n  if (banner.message === null) {\n    return null;\n  }\n\n  return <div style={notificationStyle}>{banner.message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\n\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const [banner, setBanner] = useState({ message: null, colour: 'red' });\n\n  const hook = () => {\n    personService.getPersons().then((persons) => setPersons(persons));\n  };\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification banner={banner} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} setBanner={setBanner} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filter={filter} setBanner={setBanner} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}